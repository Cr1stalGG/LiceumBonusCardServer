version: '3.0'

services:
  db:
    image: 'postgres:13-alpine'
    hostname: db
    ports:
      - '6543:5432'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  app:
    build: .
    deploy:
      mode: replicated
      replicas: 3
    image: liceum_server/app:vtest4
    ports:
      - '9000-9003:90'
    depends_on:
      - db
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect

  nginx:
    image: liceum_server/nginx:vtest7
    build:
      dockerfile: nginx/Dockerfile
      context: .
    ports:
      - '8080:8080'
    restart: always
    depends_on:
      - app

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./env/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    env_file:
      - ./env/grafana.env

volumes:
  local_pgdata: